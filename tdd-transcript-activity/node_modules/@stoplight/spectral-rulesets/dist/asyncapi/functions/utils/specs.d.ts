export declare type AsyncAPISpecVersion = keyof typeof specs;
export declare const specs: {
    '2.0.0': {
        $id: string;
        $schema: string;
        title: string;
        type: string;
        required: string[];
        additionalProperties: boolean;
        patternProperties: {
            "^x-[\\w\\d\\.\\x2d_]+$": {
                $ref: string;
            };
        };
        properties: {
            asyncapi: {
                type: string;
                enum: string[];
                description: string;
            };
            id: {
                type: string;
                description: string;
                format: string;
            };
            info: {
                $ref: string;
            };
            servers: {
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            defaultContentType: {
                type: string;
            };
            channels: {
                $ref: string;
            };
            components: {
                $ref: string;
            };
            tags: {
                type: string;
                items: {
                    $ref: string;
                };
                uniqueItems: boolean;
            };
            externalDocs: {
                $ref: string;
            };
        };
        definitions: {
            "http://asyncapi.com/definitions/2.0.0/specificationExtension.json": {
                $id: string;
                description: string;
                additionalProperties: boolean;
                additionalItems: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/info.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    title: {
                        type: string;
                        description: string;
                    };
                    version: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    termsOfService: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    contact: {
                        $ref: string;
                    };
                    license: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/contact.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    email: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/license.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/server.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    url: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    protocol: {
                        type: string;
                        description: string;
                    };
                    protocolVersion: {
                        type: string;
                    };
                    variables: {
                        $ref: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/serverVariables.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.0.0/serverVariable.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    enum: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    default: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/SecurityRequirement.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                    items: {
                        type: string;
                    };
                    uniqueItems: boolean;
                };
            };
            "http://asyncapi.com/definitions/2.0.0/bindingsObject.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                properties: {
                    http: {};
                    ws: {};
                    amqp: {};
                    amqp1: {};
                    mqtt: {};
                    mqtt5: {};
                    kafka: {};
                    nats: {};
                    jms: {};
                    sns: {};
                    sqs: {};
                    stomp: {};
                    redis: {};
                };
            };
            "http://asyncapi.com/definitions/2.0.0/channels.json": {
                $id: string;
                type: string;
                propertyNames: {
                    type: string;
                    format: string;
                    minLength: number;
                };
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.0.0/channelItem.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    $ref: {
                        $ref: string;
                    };
                    parameters: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    publish: {
                        $ref: string;
                    };
                    subscribe: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/ReferenceObject.json": {
                $id: string;
                type: string;
                format: string;
            };
            "http://asyncapi.com/definitions/2.0.0/parameter.json": {
                $id: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    schema: {
                        $ref: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/schema.json": {
                $id: string;
                allOf: ({
                    $ref: string;
                    patternProperties?: undefined;
                    properties?: undefined;
                } | {
                    patternProperties: {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        additionalProperties: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        items: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                                minItems?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                minItems: number;
                                items: {
                                    $ref: string;
                                };
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        allOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        oneOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        anyOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        not: {
                            $ref: string;
                        };
                        properties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        patternProperties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        propertyNames: {
                            $ref: string;
                        };
                        contains: {
                            $ref: string;
                        };
                        discriminator: {
                            type: string;
                        };
                        externalDocs: {
                            $ref: string;
                        };
                        deprecated: {
                            type: string;
                            default: boolean;
                        };
                    };
                    $ref?: undefined;
                })[];
            };
            "http://json-schema.org/draft-07/schema": {
                $id: string;
                title: string;
                definitions: {
                    schemaArray: {
                        type: string;
                        minItems: number;
                        items: {
                            $ref: string;
                        };
                    };
                    nonNegativeInteger: {
                        type: string;
                        minimum: number;
                    };
                    nonNegativeIntegerDefault0: {
                        allOf: ({
                            $ref: string;
                            default?: undefined;
                        } | {
                            default: number;
                            $ref?: undefined;
                        })[];
                    };
                    simpleTypes: {
                        enum: string[];
                    };
                    stringArray: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                        default: never[];
                    };
                };
                type: string[];
                properties: {
                    $id: {
                        type: string;
                        format: string;
                    };
                    $schema: {
                        type: string;
                        format: string;
                    };
                    $ref: {
                        type: string;
                        format: string;
                    };
                    $comment: {
                        type: string;
                    };
                    title: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    default: boolean;
                    readOnly: {
                        type: string;
                        default: boolean;
                    };
                    writeOnly: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: boolean;
                    };
                    multipleOf: {
                        type: string;
                        exclusiveMinimum: number;
                    };
                    maximum: {
                        type: string;
                    };
                    exclusiveMaximum: {
                        type: string;
                    };
                    minimum: {
                        type: string;
                    };
                    exclusiveMinimum: {
                        type: string;
                    };
                    maxLength: {
                        $ref: string;
                    };
                    minLength: {
                        $ref: string;
                    };
                    pattern: {
                        type: string;
                        format: string;
                    };
                    additionalItems: {
                        $ref: string;
                    };
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                        default: boolean;
                    };
                    maxItems: {
                        $ref: string;
                    };
                    minItems: {
                        $ref: string;
                    };
                    uniqueItems: {
                        type: string;
                        default: boolean;
                    };
                    contains: {
                        $ref: string;
                    };
                    maxProperties: {
                        $ref: string;
                    };
                    minProperties: {
                        $ref: string;
                    };
                    required: {
                        $ref: string;
                    };
                    additionalProperties: {
                        $ref: string;
                    };
                    definitions: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    properties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    patternProperties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        propertyNames: {
                            format: string;
                        };
                        default: {};
                    };
                    dependencies: {
                        type: string;
                        additionalProperties: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                    propertyNames: {
                        $ref: string;
                    };
                    const: boolean;
                    enum: {
                        type: string;
                        items: boolean;
                        minItems: number;
                        uniqueItems: boolean;
                    };
                    type: {
                        anyOf: ({
                            $ref: string;
                            type?: undefined;
                            items?: undefined;
                            minItems?: undefined;
                            uniqueItems?: undefined;
                        } | {
                            type: string;
                            items: {
                                $ref: string;
                            };
                            minItems: number;
                            uniqueItems: boolean;
                            $ref?: undefined;
                        })[];
                    };
                    format: {
                        type: string;
                    };
                    contentMediaType: {
                        type: string;
                    };
                    contentEncoding: {
                        type: string;
                    };
                    if: {
                        $ref: string;
                    };
                    then: {
                        $ref: string;
                    };
                    else: {
                        $ref: string;
                    };
                    allOf: {
                        $ref: string;
                    };
                    anyOf: {
                        $ref: string;
                    };
                    oneOf: {
                        $ref: string;
                    };
                    not: {
                        $ref: string;
                    };
                };
                default: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/externalDocs.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                description: string;
                required: string[];
                properties: {
                    description: {
                        type: string;
                    };
                    url: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/operation.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    traits: {
                        type: string;
                        items: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                items: ({
                                    oneOf: {
                                        $ref: string;
                                    }[];
                                    type?: undefined;
                                    additionalItems?: undefined;
                                } | {
                                    type: string;
                                    additionalItems: boolean;
                                    oneOf?: undefined;
                                })[];
                                $ref?: undefined;
                            })[];
                        };
                    };
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                    message: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/Reference.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/operationTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/tag.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                required: string[];
                properties: {
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/message.json": {
                $id: string;
                oneOf: ({
                    $ref: string;
                    oneOf?: undefined;
                } | {
                    oneOf: ({
                        type: string;
                        required: string[];
                        additionalProperties: boolean;
                        properties: {
                            oneOf: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            schemaFormat?: undefined;
                            contentType?: undefined;
                            headers?: undefined;
                            payload?: undefined;
                            correlationId?: undefined;
                            tags?: undefined;
                            summary?: undefined;
                            name?: undefined;
                            title?: undefined;
                            description?: undefined;
                            externalDocs?: undefined;
                            deprecated?: undefined;
                            examples?: undefined;
                            bindings?: undefined;
                            traits?: undefined;
                        };
                        patternProperties?: undefined;
                    } | {
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^x-[\\w\\d\\.\\x2d_]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            schemaFormat: {
                                type: string;
                            };
                            contentType: {
                                type: string;
                            };
                            headers: {
                                allOf: ({
                                    $ref: string;
                                    properties?: undefined;
                                } | {
                                    properties: {
                                        type: {
                                            const: string;
                                        };
                                    };
                                    $ref?: undefined;
                                })[];
                            };
                            payload: {};
                            correlationId: {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                            tags: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                uniqueItems: boolean;
                            };
                            summary: {
                                type: string;
                                description: string;
                            };
                            name: {
                                type: string;
                                description: string;
                            };
                            title: {
                                type: string;
                                description: string;
                            };
                            description: {
                                type: string;
                                description: string;
                            };
                            externalDocs: {
                                $ref: string;
                            };
                            deprecated: {
                                type: string;
                                default: boolean;
                            };
                            examples: {
                                type: string;
                                items: {
                                    type: string;
                                    additionalProperties: boolean;
                                    properties: {
                                        headers: {
                                            type: string;
                                        };
                                        payload: {};
                                    };
                                };
                            };
                            bindings: {
                                $ref: string;
                            };
                            traits: {
                                type: string;
                                items: {
                                    oneOf: ({
                                        $ref: string;
                                        type?: undefined;
                                        items?: undefined;
                                    } | {
                                        type: string;
                                        items: ({
                                            oneOf: {
                                                $ref: string;
                                            }[];
                                            type?: undefined;
                                            additionalItems?: undefined;
                                        } | {
                                            type: string;
                                            additionalItems: boolean;
                                            oneOf?: undefined;
                                        })[];
                                        $ref?: undefined;
                                    })[];
                                };
                            };
                            oneOf?: undefined;
                        };
                        required?: undefined;
                    })[];
                    $ref?: undefined;
                })[];
            };
            "http://asyncapi.com/definitions/2.0.0/correlationId.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/messageTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemaFormat: {
                        type: string;
                    };
                    contentType: {
                        type: string;
                    };
                    headers: {
                        allOf: ({
                            $ref: string;
                            properties?: undefined;
                        } | {
                            properties: {
                                type: {
                                    const: string;
                                };
                            };
                            $ref?: undefined;
                        })[];
                    };
                    correlationId: {
                        oneOf: {
                            $ref: string;
                        }[];
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    summary: {
                        type: string;
                        description: string;
                    };
                    name: {
                        type: string;
                        description: string;
                    };
                    title: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/components.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemas: {
                        $ref: string;
                    };
                    messages: {
                        $ref: string;
                    };
                    securitySchemes: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    parameters: {
                        $ref: string;
                    };
                    correlationIds: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    operationTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    serverBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    channelBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    operationBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/schemas.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.0.0/messages.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.0.0/SecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.0.0/userPassword.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/apiKey.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/X509.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/symmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/asymmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/HTTPSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.0.0/NonBearerHTTPSecurityScheme.json": {
                $id: string;
                not: {
                    type: string;
                    properties: {
                        scheme: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/BearerHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                        enum: string[];
                    };
                    bearerFormat: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/APIKeyHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/oauth2Flows.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    flows: {
                        type: string;
                        properties: {
                            implicit: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            password: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            clientCredentials: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            authorizationCode: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.0.0/oauth2Flow.json": {
                $id: string;
                type: string;
                properties: {
                    authorizationUrl: {
                        type: string;
                        format: string;
                    };
                    tokenUrl: {
                        type: string;
                        format: string;
                    };
                    refreshUrl: {
                        type: string;
                        format: string;
                    };
                    scopes: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/oauth2Scopes.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                };
            };
            "http://asyncapi.com/definitions/2.0.0/openIdConnect.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    openIdConnectUrl: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.0.0/parameters.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
        };
        description: string;
    };
    '2.1.0': {
        $id: string;
        $schema: string;
        title: string;
        type: string;
        required: string[];
        additionalProperties: boolean;
        patternProperties: {
            "^x-[\\w\\d\\.\\x2d_]+$": {
                $ref: string;
            };
        };
        properties: {
            asyncapi: {
                type: string;
                enum: string[];
                description: string;
            };
            id: {
                type: string;
                description: string;
                format: string;
            };
            info: {
                $ref: string;
            };
            servers: {
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            defaultContentType: {
                type: string;
            };
            channels: {
                $ref: string;
            };
            components: {
                $ref: string;
            };
            tags: {
                type: string;
                items: {
                    $ref: string;
                };
                uniqueItems: boolean;
            };
            externalDocs: {
                $ref: string;
            };
        };
        definitions: {
            "http://asyncapi.com/definitions/2.1.0/specificationExtension.json": {
                $id: string;
                description: string;
                additionalProperties: boolean;
                additionalItems: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/info.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    title: {
                        type: string;
                        description: string;
                    };
                    version: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    termsOfService: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    contact: {
                        $ref: string;
                    };
                    license: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/contact.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    email: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/license.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/server.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    url: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    protocol: {
                        type: string;
                        description: string;
                    };
                    protocolVersion: {
                        type: string;
                    };
                    variables: {
                        $ref: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/serverVariables.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.1.0/serverVariable.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    enum: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    default: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/SecurityRequirement.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                    items: {
                        type: string;
                    };
                    uniqueItems: boolean;
                };
            };
            "http://asyncapi.com/definitions/2.1.0/bindingsObject.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                properties: {
                    http: {};
                    ws: {};
                    amqp: {};
                    amqp1: {};
                    mqtt: {};
                    mqtt5: {};
                    kafka: {};
                    nats: {};
                    jms: {};
                    sns: {};
                    sqs: {};
                    stomp: {};
                    redis: {};
                    ibmmq: {};
                };
            };
            "http://asyncapi.com/definitions/2.1.0/channels.json": {
                $id: string;
                type: string;
                propertyNames: {
                    type: string;
                    format: string;
                    minLength: number;
                };
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.1.0/channelItem.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    $ref: {
                        $ref: string;
                    };
                    parameters: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    publish: {
                        $ref: string;
                    };
                    subscribe: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/ReferenceObject.json": {
                $id: string;
                type: string;
                format: string;
            };
            "http://asyncapi.com/definitions/2.1.0/parameter.json": {
                $id: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    schema: {
                        $ref: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/schema.json": {
                $id: string;
                allOf: ({
                    $ref: string;
                    patternProperties?: undefined;
                    properties?: undefined;
                } | {
                    patternProperties: {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        additionalProperties: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        items: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                                minItems?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                minItems: number;
                                items: {
                                    $ref: string;
                                };
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        allOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        oneOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        anyOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        not: {
                            $ref: string;
                        };
                        properties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        patternProperties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        propertyNames: {
                            $ref: string;
                        };
                        contains: {
                            $ref: string;
                        };
                        discriminator: {
                            type: string;
                        };
                        externalDocs: {
                            $ref: string;
                        };
                        deprecated: {
                            type: string;
                            default: boolean;
                        };
                    };
                    $ref?: undefined;
                })[];
            };
            "http://json-schema.org/draft-07/schema": {
                $id: string;
                title: string;
                definitions: {
                    schemaArray: {
                        type: string;
                        minItems: number;
                        items: {
                            $ref: string;
                        };
                    };
                    nonNegativeInteger: {
                        type: string;
                        minimum: number;
                    };
                    nonNegativeIntegerDefault0: {
                        allOf: ({
                            $ref: string;
                            default?: undefined;
                        } | {
                            default: number;
                            $ref?: undefined;
                        })[];
                    };
                    simpleTypes: {
                        enum: string[];
                    };
                    stringArray: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                        default: never[];
                    };
                };
                type: string[];
                properties: {
                    $id: {
                        type: string;
                        format: string;
                    };
                    $schema: {
                        type: string;
                        format: string;
                    };
                    $ref: {
                        type: string;
                        format: string;
                    };
                    $comment: {
                        type: string;
                    };
                    title: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    default: boolean;
                    readOnly: {
                        type: string;
                        default: boolean;
                    };
                    writeOnly: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: boolean;
                    };
                    multipleOf: {
                        type: string;
                        exclusiveMinimum: number;
                    };
                    maximum: {
                        type: string;
                    };
                    exclusiveMaximum: {
                        type: string;
                    };
                    minimum: {
                        type: string;
                    };
                    exclusiveMinimum: {
                        type: string;
                    };
                    maxLength: {
                        $ref: string;
                    };
                    minLength: {
                        $ref: string;
                    };
                    pattern: {
                        type: string;
                        format: string;
                    };
                    additionalItems: {
                        $ref: string;
                    };
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                        default: boolean;
                    };
                    maxItems: {
                        $ref: string;
                    };
                    minItems: {
                        $ref: string;
                    };
                    uniqueItems: {
                        type: string;
                        default: boolean;
                    };
                    contains: {
                        $ref: string;
                    };
                    maxProperties: {
                        $ref: string;
                    };
                    minProperties: {
                        $ref: string;
                    };
                    required: {
                        $ref: string;
                    };
                    additionalProperties: {
                        $ref: string;
                    };
                    definitions: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    properties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    patternProperties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        propertyNames: {
                            format: string;
                        };
                        default: {};
                    };
                    dependencies: {
                        type: string;
                        additionalProperties: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                    propertyNames: {
                        $ref: string;
                    };
                    const: boolean;
                    enum: {
                        type: string;
                        items: boolean;
                        minItems: number;
                        uniqueItems: boolean;
                    };
                    type: {
                        anyOf: ({
                            $ref: string;
                            type?: undefined;
                            items?: undefined;
                            minItems?: undefined;
                            uniqueItems?: undefined;
                        } | {
                            type: string;
                            items: {
                                $ref: string;
                            };
                            minItems: number;
                            uniqueItems: boolean;
                            $ref?: undefined;
                        })[];
                    };
                    format: {
                        type: string;
                    };
                    contentMediaType: {
                        type: string;
                    };
                    contentEncoding: {
                        type: string;
                    };
                    if: {
                        $ref: string;
                    };
                    then: {
                        $ref: string;
                    };
                    else: {
                        $ref: string;
                    };
                    allOf: {
                        $ref: string;
                    };
                    anyOf: {
                        $ref: string;
                    };
                    oneOf: {
                        $ref: string;
                    };
                    not: {
                        $ref: string;
                    };
                };
                default: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/externalDocs.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                description: string;
                required: string[];
                properties: {
                    description: {
                        type: string;
                    };
                    url: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/operation.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    traits: {
                        type: string;
                        items: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                items: ({
                                    oneOf: {
                                        $ref: string;
                                    }[];
                                    type?: undefined;
                                    additionalItems?: undefined;
                                } | {
                                    type: string;
                                    additionalItems: boolean;
                                    oneOf?: undefined;
                                })[];
                                $ref?: undefined;
                            })[];
                        };
                    };
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                    message: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/Reference.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/operationTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/tag.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                required: string[];
                properties: {
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/message.json": {
                $id: string;
                oneOf: ({
                    $ref: string;
                    oneOf?: undefined;
                } | {
                    oneOf: ({
                        type: string;
                        required: string[];
                        additionalProperties: boolean;
                        properties: {
                            oneOf: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            schemaFormat?: undefined;
                            contentType?: undefined;
                            headers?: undefined;
                            payload?: undefined;
                            correlationId?: undefined;
                            tags?: undefined;
                            summary?: undefined;
                            name?: undefined;
                            title?: undefined;
                            description?: undefined;
                            externalDocs?: undefined;
                            deprecated?: undefined;
                            examples?: undefined;
                            bindings?: undefined;
                            traits?: undefined;
                        };
                        patternProperties?: undefined;
                    } | {
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^x-[\\w\\d\\.\\x2d_]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            schemaFormat: {
                                type: string;
                            };
                            contentType: {
                                type: string;
                            };
                            headers: {
                                allOf: ({
                                    $ref: string;
                                    properties?: undefined;
                                } | {
                                    properties: {
                                        type: {
                                            const: string;
                                        };
                                    };
                                    $ref?: undefined;
                                })[];
                            };
                            payload: {};
                            correlationId: {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                            tags: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                uniqueItems: boolean;
                            };
                            summary: {
                                type: string;
                                description: string;
                            };
                            name: {
                                type: string;
                                description: string;
                            };
                            title: {
                                type: string;
                                description: string;
                            };
                            description: {
                                type: string;
                                description: string;
                            };
                            externalDocs: {
                                $ref: string;
                            };
                            deprecated: {
                                type: string;
                                default: boolean;
                            };
                            examples: {
                                type: string;
                                items: {
                                    type: string;
                                    additionalProperties: boolean;
                                    anyOf: {
                                        required: string[];
                                    }[];
                                    properties: {
                                        name: {
                                            type: string;
                                            description: string;
                                        };
                                        summary: {
                                            type: string;
                                            description: string;
                                        };
                                        headers: {
                                            type: string;
                                        };
                                        payload: {};
                                    };
                                };
                            };
                            bindings: {
                                $ref: string;
                            };
                            traits: {
                                type: string;
                                items: {
                                    oneOf: ({
                                        $ref: string;
                                        type?: undefined;
                                        items?: undefined;
                                    } | {
                                        type: string;
                                        items: ({
                                            oneOf: {
                                                $ref: string;
                                            }[];
                                            type?: undefined;
                                            additionalItems?: undefined;
                                        } | {
                                            type: string;
                                            additionalItems: boolean;
                                            oneOf?: undefined;
                                        })[];
                                        $ref?: undefined;
                                    })[];
                                };
                            };
                            oneOf?: undefined;
                        };
                        required?: undefined;
                    })[];
                    $ref?: undefined;
                })[];
            };
            "http://asyncapi.com/definitions/2.1.0/correlationId.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/messageTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemaFormat: {
                        type: string;
                    };
                    contentType: {
                        type: string;
                    };
                    headers: {
                        allOf: ({
                            $ref: string;
                            properties?: undefined;
                        } | {
                            properties: {
                                type: {
                                    const: string;
                                };
                            };
                            $ref?: undefined;
                        })[];
                    };
                    correlationId: {
                        oneOf: {
                            $ref: string;
                        }[];
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    summary: {
                        type: string;
                        description: string;
                    };
                    name: {
                        type: string;
                        description: string;
                    };
                    title: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                            additionalProperties: boolean;
                            anyOf: {
                                required: string[];
                            }[];
                            properties: {
                                name: {
                                    type: string;
                                    description: string;
                                };
                                summary: {
                                    type: string;
                                    description: string;
                                };
                                headers: {
                                    type: string;
                                };
                                payload: {};
                            };
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/components.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemas: {
                        $ref: string;
                    };
                    messages: {
                        $ref: string;
                    };
                    securitySchemes: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    parameters: {
                        $ref: string;
                    };
                    correlationIds: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    operationTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    serverBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    channelBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    operationBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/schemas.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.1.0/messages.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.1.0/SecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.1.0/userPassword.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/apiKey.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/X509.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/symmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/asymmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/HTTPSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.1.0/NonBearerHTTPSecurityScheme.json": {
                $id: string;
                not: {
                    type: string;
                    properties: {
                        scheme: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/BearerHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                        enum: string[];
                    };
                    bearerFormat: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/APIKeyHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/oauth2Flows.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    flows: {
                        type: string;
                        properties: {
                            implicit: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            password: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            clientCredentials: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            authorizationCode: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.1.0/oauth2Flow.json": {
                $id: string;
                type: string;
                properties: {
                    authorizationUrl: {
                        type: string;
                        format: string;
                    };
                    tokenUrl: {
                        type: string;
                        format: string;
                    };
                    refreshUrl: {
                        type: string;
                        format: string;
                    };
                    scopes: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/oauth2Scopes.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                };
            };
            "http://asyncapi.com/definitions/2.1.0/openIdConnect.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    openIdConnectUrl: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/SaslSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.1.0/SaslPlainSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/SaslScramSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/SaslGssapiSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.1.0/parameters.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
        };
        description: string;
    };
    '2.2.0': {
        $id: string;
        $schema: string;
        title: string;
        type: string;
        required: string[];
        additionalProperties: boolean;
        patternProperties: {
            "^x-[\\w\\d\\.\\x2d_]+$": {
                $ref: string;
            };
        };
        properties: {
            asyncapi: {
                type: string;
                enum: string[];
                description: string;
            };
            id: {
                type: string;
                description: string;
                format: string;
            };
            info: {
                $ref: string;
            };
            servers: {
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            defaultContentType: {
                type: string;
            };
            channels: {
                $ref: string;
            };
            components: {
                $ref: string;
            };
            tags: {
                type: string;
                items: {
                    $ref: string;
                };
                uniqueItems: boolean;
            };
            externalDocs: {
                $ref: string;
            };
        };
        definitions: {
            "http://asyncapi.com/definitions/2.2.0/specificationExtension.json": {
                $id: string;
                description: string;
                additionalProperties: boolean;
                additionalItems: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/info.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    title: {
                        type: string;
                        description: string;
                    };
                    version: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    termsOfService: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    contact: {
                        $ref: string;
                    };
                    license: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/contact.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    email: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/license.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/server.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    url: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    protocol: {
                        type: string;
                        description: string;
                    };
                    protocolVersion: {
                        type: string;
                    };
                    variables: {
                        $ref: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/serverVariables.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.2.0/serverVariable.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    enum: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    default: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/SecurityRequirement.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                    items: {
                        type: string;
                    };
                    uniqueItems: boolean;
                };
            };
            "http://asyncapi.com/definitions/2.2.0/bindingsObject.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                properties: {
                    http: {};
                    ws: {};
                    amqp: {};
                    amqp1: {};
                    mqtt: {};
                    mqtt5: {};
                    kafka: {};
                    anypointmq: {};
                    nats: {};
                    jms: {};
                    sns: {};
                    sqs: {};
                    stomp: {};
                    redis: {};
                    ibmmq: {};
                };
            };
            "http://asyncapi.com/definitions/2.2.0/channels.json": {
                $id: string;
                type: string;
                propertyNames: {
                    type: string;
                    format: string;
                    minLength: number;
                };
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.2.0/channelItem.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    $ref: {
                        $ref: string;
                    };
                    parameters: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    servers: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    publish: {
                        $ref: string;
                    };
                    subscribe: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/ReferenceObject.json": {
                $id: string;
                type: string;
                format: string;
            };
            "http://asyncapi.com/definitions/2.2.0/parameter.json": {
                $id: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    schema: {
                        $ref: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/schema.json": {
                $id: string;
                allOf: ({
                    $ref: string;
                    patternProperties?: undefined;
                    properties?: undefined;
                } | {
                    patternProperties: {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        additionalProperties: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        items: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                                minItems?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                minItems: number;
                                items: {
                                    $ref: string;
                                };
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        allOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        oneOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        anyOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        not: {
                            $ref: string;
                        };
                        properties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        patternProperties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        propertyNames: {
                            $ref: string;
                        };
                        contains: {
                            $ref: string;
                        };
                        discriminator: {
                            type: string;
                        };
                        externalDocs: {
                            $ref: string;
                        };
                        deprecated: {
                            type: string;
                            default: boolean;
                        };
                    };
                    $ref?: undefined;
                })[];
            };
            "http://json-schema.org/draft-07/schema": {
                $id: string;
                title: string;
                definitions: {
                    schemaArray: {
                        type: string;
                        minItems: number;
                        items: {
                            $ref: string;
                        };
                    };
                    nonNegativeInteger: {
                        type: string;
                        minimum: number;
                    };
                    nonNegativeIntegerDefault0: {
                        allOf: ({
                            $ref: string;
                            default?: undefined;
                        } | {
                            default: number;
                            $ref?: undefined;
                        })[];
                    };
                    simpleTypes: {
                        enum: string[];
                    };
                    stringArray: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                        default: never[];
                    };
                };
                type: string[];
                properties: {
                    $id: {
                        type: string;
                        format: string;
                    };
                    $schema: {
                        type: string;
                        format: string;
                    };
                    $ref: {
                        type: string;
                        format: string;
                    };
                    $comment: {
                        type: string;
                    };
                    title: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    default: boolean;
                    readOnly: {
                        type: string;
                        default: boolean;
                    };
                    writeOnly: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: boolean;
                    };
                    multipleOf: {
                        type: string;
                        exclusiveMinimum: number;
                    };
                    maximum: {
                        type: string;
                    };
                    exclusiveMaximum: {
                        type: string;
                    };
                    minimum: {
                        type: string;
                    };
                    exclusiveMinimum: {
                        type: string;
                    };
                    maxLength: {
                        $ref: string;
                    };
                    minLength: {
                        $ref: string;
                    };
                    pattern: {
                        type: string;
                        format: string;
                    };
                    additionalItems: {
                        $ref: string;
                    };
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                        default: boolean;
                    };
                    maxItems: {
                        $ref: string;
                    };
                    minItems: {
                        $ref: string;
                    };
                    uniqueItems: {
                        type: string;
                        default: boolean;
                    };
                    contains: {
                        $ref: string;
                    };
                    maxProperties: {
                        $ref: string;
                    };
                    minProperties: {
                        $ref: string;
                    };
                    required: {
                        $ref: string;
                    };
                    additionalProperties: {
                        $ref: string;
                    };
                    definitions: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    properties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    patternProperties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        propertyNames: {
                            format: string;
                        };
                        default: {};
                    };
                    dependencies: {
                        type: string;
                        additionalProperties: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                    propertyNames: {
                        $ref: string;
                    };
                    const: boolean;
                    enum: {
                        type: string;
                        items: boolean;
                        minItems: number;
                        uniqueItems: boolean;
                    };
                    type: {
                        anyOf: ({
                            $ref: string;
                            type?: undefined;
                            items?: undefined;
                            minItems?: undefined;
                            uniqueItems?: undefined;
                        } | {
                            type: string;
                            items: {
                                $ref: string;
                            };
                            minItems: number;
                            uniqueItems: boolean;
                            $ref?: undefined;
                        })[];
                    };
                    format: {
                        type: string;
                    };
                    contentMediaType: {
                        type: string;
                    };
                    contentEncoding: {
                        type: string;
                    };
                    if: {
                        $ref: string;
                    };
                    then: {
                        $ref: string;
                    };
                    else: {
                        $ref: string;
                    };
                    allOf: {
                        $ref: string;
                    };
                    anyOf: {
                        $ref: string;
                    };
                    oneOf: {
                        $ref: string;
                    };
                    not: {
                        $ref: string;
                    };
                };
                default: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/externalDocs.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                description: string;
                required: string[];
                properties: {
                    description: {
                        type: string;
                    };
                    url: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/operation.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    traits: {
                        type: string;
                        items: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                items: ({
                                    oneOf: {
                                        $ref: string;
                                    }[];
                                    type?: undefined;
                                    additionalItems?: undefined;
                                } | {
                                    type: string;
                                    additionalItems: boolean;
                                    oneOf?: undefined;
                                })[];
                                $ref?: undefined;
                            })[];
                        };
                    };
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                    message: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/Reference.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/operationTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/tag.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                required: string[];
                properties: {
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/message.json": {
                $id: string;
                oneOf: ({
                    $ref: string;
                    oneOf?: undefined;
                } | {
                    oneOf: ({
                        type: string;
                        required: string[];
                        additionalProperties: boolean;
                        properties: {
                            oneOf: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            schemaFormat?: undefined;
                            contentType?: undefined;
                            headers?: undefined;
                            payload?: undefined;
                            correlationId?: undefined;
                            tags?: undefined;
                            summary?: undefined;
                            name?: undefined;
                            title?: undefined;
                            description?: undefined;
                            externalDocs?: undefined;
                            deprecated?: undefined;
                            examples?: undefined;
                            bindings?: undefined;
                            traits?: undefined;
                        };
                        patternProperties?: undefined;
                    } | {
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^x-[\\w\\d\\.\\x2d_]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            schemaFormat: {
                                type: string;
                            };
                            contentType: {
                                type: string;
                            };
                            headers: {
                                allOf: ({
                                    $ref: string;
                                    properties?: undefined;
                                } | {
                                    properties: {
                                        type: {
                                            const: string;
                                        };
                                    };
                                    $ref?: undefined;
                                })[];
                            };
                            payload: {};
                            correlationId: {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                            tags: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                uniqueItems: boolean;
                            };
                            summary: {
                                type: string;
                                description: string;
                            };
                            name: {
                                type: string;
                                description: string;
                            };
                            title: {
                                type: string;
                                description: string;
                            };
                            description: {
                                type: string;
                                description: string;
                            };
                            externalDocs: {
                                $ref: string;
                            };
                            deprecated: {
                                type: string;
                                default: boolean;
                            };
                            examples: {
                                type: string;
                                items: {
                                    type: string;
                                    additionalProperties: boolean;
                                    anyOf: {
                                        required: string[];
                                    }[];
                                    properties: {
                                        name: {
                                            type: string;
                                            description: string;
                                        };
                                        summary: {
                                            type: string;
                                            description: string;
                                        };
                                        headers: {
                                            type: string;
                                        };
                                        payload: {};
                                    };
                                };
                            };
                            bindings: {
                                $ref: string;
                            };
                            traits: {
                                type: string;
                                items: {
                                    oneOf: ({
                                        $ref: string;
                                        type?: undefined;
                                        items?: undefined;
                                    } | {
                                        type: string;
                                        items: ({
                                            oneOf: {
                                                $ref: string;
                                            }[];
                                            type?: undefined;
                                            additionalItems?: undefined;
                                        } | {
                                            type: string;
                                            additionalItems: boolean;
                                            oneOf?: undefined;
                                        })[];
                                        $ref?: undefined;
                                    })[];
                                };
                            };
                            oneOf?: undefined;
                        };
                        required?: undefined;
                    })[];
                    $ref?: undefined;
                })[];
            };
            "http://asyncapi.com/definitions/2.2.0/correlationId.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/messageTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemaFormat: {
                        type: string;
                    };
                    contentType: {
                        type: string;
                    };
                    headers: {
                        allOf: ({
                            $ref: string;
                            properties?: undefined;
                        } | {
                            properties: {
                                type: {
                                    const: string;
                                };
                            };
                            $ref?: undefined;
                        })[];
                    };
                    correlationId: {
                        oneOf: {
                            $ref: string;
                        }[];
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    summary: {
                        type: string;
                        description: string;
                    };
                    name: {
                        type: string;
                        description: string;
                    };
                    title: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/components.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemas: {
                        $ref: string;
                    };
                    messages: {
                        $ref: string;
                    };
                    securitySchemes: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    parameters: {
                        $ref: string;
                    };
                    correlationIds: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    operationTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    serverBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    channelBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    operationBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/schemas.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.2.0/messages.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.2.0/SecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.2.0/userPassword.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/apiKey.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/X509.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/symmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/asymmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/HTTPSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.2.0/NonBearerHTTPSecurityScheme.json": {
                $id: string;
                not: {
                    type: string;
                    properties: {
                        scheme: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/BearerHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                        enum: string[];
                    };
                    bearerFormat: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/APIKeyHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/oauth2Flows.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    flows: {
                        type: string;
                        properties: {
                            implicit: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            password: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            clientCredentials: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            authorizationCode: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.2.0/oauth2Flow.json": {
                $id: string;
                type: string;
                properties: {
                    authorizationUrl: {
                        type: string;
                        format: string;
                    };
                    tokenUrl: {
                        type: string;
                        format: string;
                    };
                    refreshUrl: {
                        type: string;
                        format: string;
                    };
                    scopes: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/oauth2Scopes.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                };
            };
            "http://asyncapi.com/definitions/2.2.0/openIdConnect.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    openIdConnectUrl: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/SaslSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.2.0/SaslPlainSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/SaslScramSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/SaslGssapiSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.2.0/parameters.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
        };
        description: string;
    };
    '2.3.0': {
        $id: string;
        $schema: string;
        title: string;
        type: string;
        required: string[];
        additionalProperties: boolean;
        patternProperties: {
            "^x-[\\w\\d\\.\\x2d_]+$": {
                $ref: string;
            };
        };
        properties: {
            asyncapi: {
                type: string;
                enum: string[];
                description: string;
            };
            id: {
                type: string;
                description: string;
                format: string;
            };
            info: {
                $ref: string;
            };
            servers: {
                $ref: string;
            };
            defaultContentType: {
                type: string;
            };
            channels: {
                $ref: string;
            };
            components: {
                $ref: string;
            };
            tags: {
                type: string;
                items: {
                    $ref: string;
                };
                uniqueItems: boolean;
            };
            externalDocs: {
                $ref: string;
            };
        };
        definitions: {
            "http://asyncapi.com/definitions/2.3.0/specificationExtension.json": {
                $id: string;
                description: string;
                additionalProperties: boolean;
                additionalItems: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/info.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    title: {
                        type: string;
                        description: string;
                    };
                    version: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    termsOfService: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    contact: {
                        $ref: string;
                    };
                    license: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/contact.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    email: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/license.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/servers.json": {
                $id: string;
                description: string;
                type: string;
                additionalProperties: {
                    oneOf: {
                        $ref: string;
                    }[];
                };
            };
            "http://asyncapi.com/definitions/2.3.0/Reference.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/ReferenceObject.json": {
                $id: string;
                type: string;
                format: string;
            };
            "http://asyncapi.com/definitions/2.3.0/server.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    url: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    protocol: {
                        type: string;
                        description: string;
                    };
                    protocolVersion: {
                        type: string;
                    };
                    variables: {
                        $ref: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/serverVariables.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.3.0/serverVariable.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    enum: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    default: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/SecurityRequirement.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                    items: {
                        type: string;
                    };
                    uniqueItems: boolean;
                };
            };
            "http://asyncapi.com/definitions/2.3.0/bindingsObject.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                properties: {
                    http: {};
                    ws: {};
                    amqp: {};
                    amqp1: {};
                    mqtt: {};
                    mqtt5: {};
                    kafka: {};
                    anypointmq: {};
                    nats: {};
                    jms: {};
                    sns: {};
                    sqs: {};
                    stomp: {};
                    redis: {};
                    ibmmq: {};
                    solace: {};
                };
            };
            "http://asyncapi.com/definitions/2.3.0/channels.json": {
                $id: string;
                type: string;
                propertyNames: {
                    type: string;
                    format: string;
                    minLength: number;
                };
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.3.0/channelItem.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    $ref: {
                        $ref: string;
                    };
                    parameters: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    servers: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    publish: {
                        $ref: string;
                    };
                    subscribe: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/parameter.json": {
                $id: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    schema: {
                        $ref: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/schema.json": {
                $id: string;
                allOf: ({
                    $ref: string;
                    patternProperties?: undefined;
                    properties?: undefined;
                } | {
                    patternProperties: {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        additionalProperties: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        items: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                                minItems?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                minItems: number;
                                items: {
                                    $ref: string;
                                };
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        allOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        oneOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        anyOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        not: {
                            $ref: string;
                        };
                        properties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        patternProperties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        propertyNames: {
                            $ref: string;
                        };
                        contains: {
                            $ref: string;
                        };
                        discriminator: {
                            type: string;
                        };
                        externalDocs: {
                            $ref: string;
                        };
                        deprecated: {
                            type: string;
                            default: boolean;
                        };
                    };
                    $ref?: undefined;
                })[];
            };
            "http://json-schema.org/draft-07/schema": {
                $id: string;
                title: string;
                definitions: {
                    schemaArray: {
                        type: string;
                        minItems: number;
                        items: {
                            $ref: string;
                        };
                    };
                    nonNegativeInteger: {
                        type: string;
                        minimum: number;
                    };
                    nonNegativeIntegerDefault0: {
                        allOf: ({
                            $ref: string;
                            default?: undefined;
                        } | {
                            default: number;
                            $ref?: undefined;
                        })[];
                    };
                    simpleTypes: {
                        enum: string[];
                    };
                    stringArray: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                        default: never[];
                    };
                };
                type: string[];
                properties: {
                    $id: {
                        type: string;
                        format: string;
                    };
                    $schema: {
                        type: string;
                        format: string;
                    };
                    $ref: {
                        type: string;
                        format: string;
                    };
                    $comment: {
                        type: string;
                    };
                    title: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    default: boolean;
                    readOnly: {
                        type: string;
                        default: boolean;
                    };
                    writeOnly: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: boolean;
                    };
                    multipleOf: {
                        type: string;
                        exclusiveMinimum: number;
                    };
                    maximum: {
                        type: string;
                    };
                    exclusiveMaximum: {
                        type: string;
                    };
                    minimum: {
                        type: string;
                    };
                    exclusiveMinimum: {
                        type: string;
                    };
                    maxLength: {
                        $ref: string;
                    };
                    minLength: {
                        $ref: string;
                    };
                    pattern: {
                        type: string;
                        format: string;
                    };
                    additionalItems: {
                        $ref: string;
                    };
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                        default: boolean;
                    };
                    maxItems: {
                        $ref: string;
                    };
                    minItems: {
                        $ref: string;
                    };
                    uniqueItems: {
                        type: string;
                        default: boolean;
                    };
                    contains: {
                        $ref: string;
                    };
                    maxProperties: {
                        $ref: string;
                    };
                    minProperties: {
                        $ref: string;
                    };
                    required: {
                        $ref: string;
                    };
                    additionalProperties: {
                        $ref: string;
                    };
                    definitions: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    properties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    patternProperties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        propertyNames: {
                            format: string;
                        };
                        default: {};
                    };
                    dependencies: {
                        type: string;
                        additionalProperties: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                    propertyNames: {
                        $ref: string;
                    };
                    const: boolean;
                    enum: {
                        type: string;
                        items: boolean;
                        minItems: number;
                        uniqueItems: boolean;
                    };
                    type: {
                        anyOf: ({
                            $ref: string;
                            type?: undefined;
                            items?: undefined;
                            minItems?: undefined;
                            uniqueItems?: undefined;
                        } | {
                            type: string;
                            items: {
                                $ref: string;
                            };
                            minItems: number;
                            uniqueItems: boolean;
                            $ref?: undefined;
                        })[];
                    };
                    format: {
                        type: string;
                    };
                    contentMediaType: {
                        type: string;
                    };
                    contentEncoding: {
                        type: string;
                    };
                    if: {
                        $ref: string;
                    };
                    then: {
                        $ref: string;
                    };
                    else: {
                        $ref: string;
                    };
                    allOf: {
                        $ref: string;
                    };
                    anyOf: {
                        $ref: string;
                    };
                    oneOf: {
                        $ref: string;
                    };
                    not: {
                        $ref: string;
                    };
                };
                default: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/externalDocs.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                description: string;
                required: string[];
                properties: {
                    description: {
                        type: string;
                    };
                    url: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/operation.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    traits: {
                        type: string;
                        items: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                items: ({
                                    oneOf: {
                                        $ref: string;
                                    }[];
                                    type?: undefined;
                                    additionalItems?: undefined;
                                } | {
                                    type: string;
                                    additionalItems: boolean;
                                    oneOf?: undefined;
                                })[];
                                $ref?: undefined;
                            })[];
                        };
                    };
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                    message: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/operationTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/tag.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                required: string[];
                properties: {
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/message.json": {
                $id: string;
                oneOf: ({
                    $ref: string;
                    oneOf?: undefined;
                } | {
                    oneOf: ({
                        type: string;
                        required: string[];
                        additionalProperties: boolean;
                        properties: {
                            oneOf: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            schemaFormat?: undefined;
                            contentType?: undefined;
                            headers?: undefined;
                            payload?: undefined;
                            correlationId?: undefined;
                            tags?: undefined;
                            summary?: undefined;
                            name?: undefined;
                            title?: undefined;
                            description?: undefined;
                            externalDocs?: undefined;
                            deprecated?: undefined;
                            examples?: undefined;
                            bindings?: undefined;
                            traits?: undefined;
                        };
                        patternProperties?: undefined;
                    } | {
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^x-[\\w\\d\\.\\x2d_]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            schemaFormat: {
                                type: string;
                            };
                            contentType: {
                                type: string;
                            };
                            headers: {
                                allOf: ({
                                    $ref: string;
                                    properties?: undefined;
                                } | {
                                    properties: {
                                        type: {
                                            const: string;
                                        };
                                    };
                                    $ref?: undefined;
                                })[];
                            };
                            payload: {};
                            correlationId: {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                            tags: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                uniqueItems: boolean;
                            };
                            summary: {
                                type: string;
                                description: string;
                            };
                            name: {
                                type: string;
                                description: string;
                            };
                            title: {
                                type: string;
                                description: string;
                            };
                            description: {
                                type: string;
                                description: string;
                            };
                            externalDocs: {
                                $ref: string;
                            };
                            deprecated: {
                                type: string;
                                default: boolean;
                            };
                            examples: {
                                type: string;
                                items: {
                                    type: string;
                                    additionalProperties: boolean;
                                    anyOf: {
                                        required: string[];
                                    }[];
                                    properties: {
                                        name: {
                                            type: string;
                                            description: string;
                                        };
                                        summary: {
                                            type: string;
                                            description: string;
                                        };
                                        headers: {
                                            type: string;
                                        };
                                        payload: {};
                                    };
                                };
                            };
                            bindings: {
                                $ref: string;
                            };
                            traits: {
                                type: string;
                                items: {
                                    oneOf: ({
                                        $ref: string;
                                        type?: undefined;
                                        items?: undefined;
                                    } | {
                                        type: string;
                                        items: ({
                                            oneOf: {
                                                $ref: string;
                                            }[];
                                            type?: undefined;
                                            additionalItems?: undefined;
                                        } | {
                                            type: string;
                                            additionalItems: boolean;
                                            oneOf?: undefined;
                                        })[];
                                        $ref?: undefined;
                                    })[];
                                };
                            };
                            oneOf?: undefined;
                        };
                        required?: undefined;
                    })[];
                    $ref?: undefined;
                })[];
            };
            "http://asyncapi.com/definitions/2.3.0/correlationId.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/messageTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemaFormat: {
                        type: string;
                    };
                    contentType: {
                        type: string;
                    };
                    headers: {
                        allOf: ({
                            $ref: string;
                            properties?: undefined;
                        } | {
                            properties: {
                                type: {
                                    const: string;
                                };
                            };
                            $ref?: undefined;
                        })[];
                    };
                    correlationId: {
                        oneOf: {
                            $ref: string;
                        }[];
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    summary: {
                        type: string;
                        description: string;
                    };
                    name: {
                        type: string;
                        description: string;
                    };
                    title: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/components.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemas: {
                        $ref: string;
                    };
                    servers: {
                        $ref: string;
                    };
                    channels: {
                        $ref: string;
                    };
                    messages: {
                        $ref: string;
                    };
                    securitySchemes: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    parameters: {
                        $ref: string;
                    };
                    correlationIds: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    operationTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    serverBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    channelBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    operationBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/schemas.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.3.0/messages.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.3.0/SecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.3.0/userPassword.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/apiKey.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/X509.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/symmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/asymmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/HTTPSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.3.0/NonBearerHTTPSecurityScheme.json": {
                $id: string;
                not: {
                    type: string;
                    properties: {
                        scheme: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/BearerHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                        enum: string[];
                    };
                    bearerFormat: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/APIKeyHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/oauth2Flows.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    flows: {
                        type: string;
                        properties: {
                            implicit: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            password: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            clientCredentials: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            authorizationCode: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.3.0/oauth2Flow.json": {
                $id: string;
                type: string;
                properties: {
                    authorizationUrl: {
                        type: string;
                        format: string;
                    };
                    tokenUrl: {
                        type: string;
                        format: string;
                    };
                    refreshUrl: {
                        type: string;
                        format: string;
                    };
                    scopes: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/oauth2Scopes.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                };
            };
            "http://asyncapi.com/definitions/2.3.0/openIdConnect.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    openIdConnectUrl: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/SaslSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.3.0/SaslPlainSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/SaslScramSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/SaslGssapiSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.3.0/parameters.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
        };
        description: string;
    };
    '2.4.0': {
        $id: string;
        $schema: string;
        title: string;
        type: string;
        required: string[];
        additionalProperties: boolean;
        patternProperties: {
            "^x-[\\w\\d\\.\\x2d_]+$": {
                $ref: string;
            };
        };
        properties: {
            asyncapi: {
                type: string;
                enum: string[];
                description: string;
            };
            id: {
                type: string;
                description: string;
                format: string;
            };
            info: {
                $ref: string;
            };
            servers: {
                $ref: string;
            };
            defaultContentType: {
                type: string;
            };
            channels: {
                $ref: string;
            };
            components: {
                $ref: string;
            };
            tags: {
                type: string;
                items: {
                    $ref: string;
                };
                uniqueItems: boolean;
            };
            externalDocs: {
                $ref: string;
            };
        };
        definitions: {
            "http://asyncapi.com/definitions/2.4.0/specificationExtension.json": {
                $id: string;
                description: string;
                additionalProperties: boolean;
                additionalItems: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/info.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    title: {
                        type: string;
                        description: string;
                    };
                    version: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    termsOfService: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    contact: {
                        $ref: string;
                    };
                    license: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/contact.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    email: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/license.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/servers.json": {
                $id: string;
                description: string;
                type: string;
                additionalProperties: {
                    oneOf: {
                        $ref: string;
                    }[];
                };
            };
            "http://asyncapi.com/definitions/2.4.0/Reference.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/ReferenceObject.json": {
                $id: string;
                type: string;
                format: string;
            };
            "http://asyncapi.com/definitions/2.4.0/server.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    url: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    protocol: {
                        type: string;
                        description: string;
                    };
                    protocolVersion: {
                        type: string;
                    };
                    variables: {
                        $ref: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/serverVariables.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.4.0/serverVariable.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    enum: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    default: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/SecurityRequirement.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                    items: {
                        type: string;
                    };
                    uniqueItems: boolean;
                };
            };
            "http://asyncapi.com/definitions/2.4.0/bindingsObject.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                properties: {
                    http: {};
                    ws: {};
                    amqp: {};
                    amqp1: {};
                    mqtt: {};
                    mqtt5: {};
                    kafka: {};
                    anypointmq: {};
                    nats: {};
                    jms: {};
                    sns: {};
                    sqs: {};
                    stomp: {};
                    redis: {};
                    ibmmq: {};
                    solace: {};
                };
            };
            "http://asyncapi.com/definitions/2.4.0/channels.json": {
                $id: string;
                type: string;
                propertyNames: {
                    type: string;
                    format: string;
                    minLength: number;
                };
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.4.0/channelItem.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    $ref: {
                        $ref: string;
                    };
                    parameters: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    servers: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    publish: {
                        $ref: string;
                    };
                    subscribe: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/parameter.json": {
                $id: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    schema: {
                        $ref: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/schema.json": {
                $id: string;
                allOf: ({
                    $ref: string;
                    patternProperties?: undefined;
                    properties?: undefined;
                } | {
                    patternProperties: {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        additionalProperties: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        items: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                                minItems?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                minItems: number;
                                items: {
                                    $ref: string;
                                };
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        allOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        oneOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        anyOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        not: {
                            $ref: string;
                        };
                        properties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        patternProperties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        propertyNames: {
                            $ref: string;
                        };
                        contains: {
                            $ref: string;
                        };
                        discriminator: {
                            type: string;
                        };
                        externalDocs: {
                            $ref: string;
                        };
                        deprecated: {
                            type: string;
                            default: boolean;
                        };
                    };
                    $ref?: undefined;
                })[];
            };
            "http://json-schema.org/draft-07/schema": {
                $id: string;
                title: string;
                definitions: {
                    schemaArray: {
                        type: string;
                        minItems: number;
                        items: {
                            $ref: string;
                        };
                    };
                    nonNegativeInteger: {
                        type: string;
                        minimum: number;
                    };
                    nonNegativeIntegerDefault0: {
                        allOf: ({
                            $ref: string;
                            default?: undefined;
                        } | {
                            default: number;
                            $ref?: undefined;
                        })[];
                    };
                    simpleTypes: {
                        enum: string[];
                    };
                    stringArray: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                        default: never[];
                    };
                };
                type: string[];
                properties: {
                    $id: {
                        type: string;
                        format: string;
                    };
                    $schema: {
                        type: string;
                        format: string;
                    };
                    $ref: {
                        type: string;
                        format: string;
                    };
                    $comment: {
                        type: string;
                    };
                    title: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    default: boolean;
                    readOnly: {
                        type: string;
                        default: boolean;
                    };
                    writeOnly: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: boolean;
                    };
                    multipleOf: {
                        type: string;
                        exclusiveMinimum: number;
                    };
                    maximum: {
                        type: string;
                    };
                    exclusiveMaximum: {
                        type: string;
                    };
                    minimum: {
                        type: string;
                    };
                    exclusiveMinimum: {
                        type: string;
                    };
                    maxLength: {
                        $ref: string;
                    };
                    minLength: {
                        $ref: string;
                    };
                    pattern: {
                        type: string;
                        format: string;
                    };
                    additionalItems: {
                        $ref: string;
                    };
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                        default: boolean;
                    };
                    maxItems: {
                        $ref: string;
                    };
                    minItems: {
                        $ref: string;
                    };
                    uniqueItems: {
                        type: string;
                        default: boolean;
                    };
                    contains: {
                        $ref: string;
                    };
                    maxProperties: {
                        $ref: string;
                    };
                    minProperties: {
                        $ref: string;
                    };
                    required: {
                        $ref: string;
                    };
                    additionalProperties: {
                        $ref: string;
                    };
                    definitions: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    properties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    patternProperties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        propertyNames: {
                            format: string;
                        };
                        default: {};
                    };
                    dependencies: {
                        type: string;
                        additionalProperties: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                    propertyNames: {
                        $ref: string;
                    };
                    const: boolean;
                    enum: {
                        type: string;
                        items: boolean;
                        minItems: number;
                        uniqueItems: boolean;
                    };
                    type: {
                        anyOf: ({
                            $ref: string;
                            type?: undefined;
                            items?: undefined;
                            minItems?: undefined;
                            uniqueItems?: undefined;
                        } | {
                            type: string;
                            items: {
                                $ref: string;
                            };
                            minItems: number;
                            uniqueItems: boolean;
                            $ref?: undefined;
                        })[];
                    };
                    format: {
                        type: string;
                    };
                    contentMediaType: {
                        type: string;
                    };
                    contentEncoding: {
                        type: string;
                    };
                    if: {
                        $ref: string;
                    };
                    then: {
                        $ref: string;
                    };
                    else: {
                        $ref: string;
                    };
                    allOf: {
                        $ref: string;
                    };
                    anyOf: {
                        $ref: string;
                    };
                    oneOf: {
                        $ref: string;
                    };
                    not: {
                        $ref: string;
                    };
                };
                default: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/externalDocs.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                description: string;
                required: string[];
                properties: {
                    description: {
                        type: string;
                    };
                    url: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/operation.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    traits: {
                        type: string;
                        items: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                items: ({
                                    oneOf: {
                                        $ref: string;
                                    }[];
                                    type?: undefined;
                                    additionalItems?: undefined;
                                } | {
                                    type: string;
                                    additionalItems: boolean;
                                    oneOf?: undefined;
                                })[];
                                $ref?: undefined;
                            })[];
                        };
                    };
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                    message: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/operationTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/tag.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                required: string[];
                properties: {
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/message.json": {
                $id: string;
                oneOf: ({
                    $ref: string;
                    oneOf?: undefined;
                } | {
                    oneOf: ({
                        type: string;
                        required: string[];
                        additionalProperties: boolean;
                        properties: {
                            oneOf: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            schemaFormat?: undefined;
                            contentType?: undefined;
                            headers?: undefined;
                            messageId?: undefined;
                            payload?: undefined;
                            correlationId?: undefined;
                            tags?: undefined;
                            summary?: undefined;
                            name?: undefined;
                            title?: undefined;
                            description?: undefined;
                            externalDocs?: undefined;
                            deprecated?: undefined;
                            examples?: undefined;
                            bindings?: undefined;
                            traits?: undefined;
                        };
                        patternProperties?: undefined;
                    } | {
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^x-[\\w\\d\\.\\x2d_]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            schemaFormat: {
                                type: string;
                            };
                            contentType: {
                                type: string;
                            };
                            headers: {
                                allOf: ({
                                    $ref: string;
                                    properties?: undefined;
                                } | {
                                    properties: {
                                        type: {
                                            const: string;
                                        };
                                    };
                                    $ref?: undefined;
                                })[];
                            };
                            messageId: {
                                type: string;
                            };
                            payload: {};
                            correlationId: {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                            tags: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                uniqueItems: boolean;
                            };
                            summary: {
                                type: string;
                                description: string;
                            };
                            name: {
                                type: string;
                                description: string;
                            };
                            title: {
                                type: string;
                                description: string;
                            };
                            description: {
                                type: string;
                                description: string;
                            };
                            externalDocs: {
                                $ref: string;
                            };
                            deprecated: {
                                type: string;
                                default: boolean;
                            };
                            examples: {
                                type: string;
                                items: {
                                    type: string;
                                    additionalProperties: boolean;
                                    anyOf: {
                                        required: string[];
                                    }[];
                                    properties: {
                                        name: {
                                            type: string;
                                            description: string;
                                        };
                                        summary: {
                                            type: string;
                                            description: string;
                                        };
                                        headers: {
                                            type: string;
                                        };
                                        payload: {};
                                    };
                                };
                            };
                            bindings: {
                                $ref: string;
                            };
                            traits: {
                                type: string;
                                items: {
                                    oneOf: ({
                                        $ref: string;
                                        type?: undefined;
                                        items?: undefined;
                                    } | {
                                        type: string;
                                        items: ({
                                            oneOf: {
                                                $ref: string;
                                            }[];
                                            type?: undefined;
                                            additionalItems?: undefined;
                                        } | {
                                            type: string;
                                            additionalItems: boolean;
                                            oneOf?: undefined;
                                        })[];
                                        $ref?: undefined;
                                    })[];
                                };
                            };
                            oneOf?: undefined;
                        };
                        required?: undefined;
                    })[];
                    $ref?: undefined;
                })[];
            };
            "http://asyncapi.com/definitions/2.4.0/correlationId.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/messageTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemaFormat: {
                        type: string;
                    };
                    contentType: {
                        type: string;
                    };
                    headers: {
                        allOf: ({
                            $ref: string;
                            properties?: undefined;
                        } | {
                            properties: {
                                type: {
                                    const: string;
                                };
                            };
                            $ref?: undefined;
                        })[];
                    };
                    messageId: {
                        type: string;
                    };
                    correlationId: {
                        oneOf: {
                            $ref: string;
                        }[];
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    summary: {
                        type: string;
                        description: string;
                    };
                    name: {
                        type: string;
                        description: string;
                    };
                    title: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/components.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemas: {
                        $ref: string;
                    };
                    servers: {
                        $ref: string;
                    };
                    channels: {
                        $ref: string;
                    };
                    serverVariables: {
                        $ref: string;
                    };
                    messages: {
                        $ref: string;
                    };
                    securitySchemes: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    parameters: {
                        $ref: string;
                    };
                    correlationIds: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    operationTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    serverBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    channelBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    operationBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/schemas.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.4.0/messages.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.4.0/SecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.4.0/userPassword.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/apiKey.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/X509.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/symmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/asymmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/HTTPSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.4.0/NonBearerHTTPSecurityScheme.json": {
                $id: string;
                not: {
                    type: string;
                    properties: {
                        scheme: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/BearerHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                        enum: string[];
                    };
                    bearerFormat: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/APIKeyHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/oauth2Flows.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    flows: {
                        type: string;
                        properties: {
                            implicit: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            password: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            clientCredentials: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            authorizationCode: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.4.0/oauth2Flow.json": {
                $id: string;
                type: string;
                properties: {
                    authorizationUrl: {
                        type: string;
                        format: string;
                    };
                    tokenUrl: {
                        type: string;
                        format: string;
                    };
                    refreshUrl: {
                        type: string;
                        format: string;
                    };
                    scopes: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/oauth2Scopes.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                };
            };
            "http://asyncapi.com/definitions/2.4.0/openIdConnect.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    openIdConnectUrl: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/SaslSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.4.0/SaslPlainSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/SaslScramSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/SaslGssapiSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.4.0/parameters.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
        };
        description: string;
    };
    '2.5.0': {
        $id: string;
        $schema: string;
        title: string;
        type: string;
        required: string[];
        additionalProperties: boolean;
        patternProperties: {
            "^x-[\\w\\d\\.\\x2d_]+$": {
                $ref: string;
            };
        };
        properties: {
            asyncapi: {
                type: string;
                enum: string[];
                description: string;
            };
            id: {
                type: string;
                description: string;
                format: string;
            };
            info: {
                $ref: string;
            };
            servers: {
                $ref: string;
            };
            defaultContentType: {
                type: string;
            };
            channels: {
                $ref: string;
            };
            components: {
                $ref: string;
            };
            tags: {
                type: string;
                items: {
                    $ref: string;
                };
                uniqueItems: boolean;
            };
            externalDocs: {
                $ref: string;
            };
        };
        definitions: {
            "http://asyncapi.com/definitions/2.5.0/specificationExtension.json": {
                $id: string;
                description: string;
                additionalProperties: boolean;
                additionalItems: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/info.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    title: {
                        type: string;
                        description: string;
                    };
                    version: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    termsOfService: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    contact: {
                        $ref: string;
                    };
                    license: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/contact.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                    email: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/license.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                properties: {
                    name: {
                        type: string;
                        description: string;
                    };
                    url: {
                        type: string;
                        description: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/servers.json": {
                $id: string;
                description: string;
                type: string;
                additionalProperties: {
                    oneOf: {
                        $ref: string;
                    }[];
                };
            };
            "http://asyncapi.com/definitions/2.5.0/Reference.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/ReferenceObject.json": {
                $id: string;
                type: string;
                format: string;
            };
            "http://asyncapi.com/definitions/2.5.0/server.json": {
                $id: string;
                type: string;
                description: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    url: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    protocol: {
                        type: string;
                        description: string;
                    };
                    protocolVersion: {
                        type: string;
                    };
                    variables: {
                        $ref: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/serverVariables.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    oneOf: {
                        $ref: string;
                    }[];
                };
            };
            "http://asyncapi.com/definitions/2.5.0/serverVariable.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    enum: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    default: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/SecurityRequirement.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                    items: {
                        type: string;
                    };
                    uniqueItems: boolean;
                };
            };
            "http://asyncapi.com/definitions/2.5.0/bindingsObject.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                properties: {
                    http: {};
                    ws: {};
                    amqp: {};
                    amqp1: {};
                    mqtt: {};
                    mqtt5: {};
                    kafka: {};
                    anypointmq: {};
                    nats: {};
                    jms: {};
                    sns: {};
                    sqs: {};
                    stomp: {};
                    redis: {};
                    ibmmq: {};
                    solace: {};
                };
            };
            "http://asyncapi.com/definitions/2.5.0/tag.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                required: string[];
                properties: {
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/externalDocs.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                description: string;
                required: string[];
                properties: {
                    description: {
                        type: string;
                    };
                    url: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/channels.json": {
                $id: string;
                type: string;
                propertyNames: {
                    type: string;
                    format: string;
                    minLength: number;
                };
                additionalProperties: {
                    $ref: string;
                };
            };
            "http://asyncapi.com/definitions/2.5.0/channelItem.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    $ref: {
                        $ref: string;
                    };
                    parameters: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    servers: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                    };
                    publish: {
                        $ref: string;
                    };
                    subscribe: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/parameter.json": {
                $id: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    schema: {
                        $ref: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    $ref: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/schema.json": {
                $id: string;
                allOf: ({
                    $ref: string;
                    patternProperties?: undefined;
                    properties?: undefined;
                } | {
                    patternProperties: {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            $ref: string;
                        };
                    };
                    properties: {
                        additionalProperties: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                            } | {
                                type: string;
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        items: {
                            anyOf: ({
                                $ref: string;
                                type?: undefined;
                                minItems?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                minItems: number;
                                items: {
                                    $ref: string;
                                };
                                $ref?: undefined;
                            })[];
                            default: {};
                        };
                        allOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        oneOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        anyOf: {
                            type: string;
                            minItems: number;
                            items: {
                                $ref: string;
                            };
                        };
                        not: {
                            $ref: string;
                        };
                        properties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        patternProperties: {
                            type: string;
                            additionalProperties: {
                                $ref: string;
                            };
                            default: {};
                        };
                        propertyNames: {
                            $ref: string;
                        };
                        contains: {
                            $ref: string;
                        };
                        discriminator: {
                            type: string;
                        };
                        externalDocs: {
                            $ref: string;
                        };
                        deprecated: {
                            type: string;
                            default: boolean;
                        };
                    };
                    $ref?: undefined;
                })[];
            };
            "http://json-schema.org/draft-07/schema": {
                $id: string;
                title: string;
                definitions: {
                    schemaArray: {
                        type: string;
                        minItems: number;
                        items: {
                            $ref: string;
                        };
                    };
                    nonNegativeInteger: {
                        type: string;
                        minimum: number;
                    };
                    nonNegativeIntegerDefault0: {
                        allOf: ({
                            $ref: string;
                            default?: undefined;
                        } | {
                            default: number;
                            $ref?: undefined;
                        })[];
                    };
                    simpleTypes: {
                        enum: string[];
                    };
                    stringArray: {
                        type: string;
                        items: {
                            type: string;
                        };
                        uniqueItems: boolean;
                        default: never[];
                    };
                };
                type: string[];
                properties: {
                    $id: {
                        type: string;
                        format: string;
                    };
                    $schema: {
                        type: string;
                        format: string;
                    };
                    $ref: {
                        type: string;
                        format: string;
                    };
                    $comment: {
                        type: string;
                    };
                    title: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    default: boolean;
                    readOnly: {
                        type: string;
                        default: boolean;
                    };
                    writeOnly: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: boolean;
                    };
                    multipleOf: {
                        type: string;
                        exclusiveMinimum: number;
                    };
                    maximum: {
                        type: string;
                    };
                    exclusiveMaximum: {
                        type: string;
                    };
                    minimum: {
                        type: string;
                    };
                    exclusiveMinimum: {
                        type: string;
                    };
                    maxLength: {
                        $ref: string;
                    };
                    minLength: {
                        $ref: string;
                    };
                    pattern: {
                        type: string;
                        format: string;
                    };
                    additionalItems: {
                        $ref: string;
                    };
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                        default: boolean;
                    };
                    maxItems: {
                        $ref: string;
                    };
                    minItems: {
                        $ref: string;
                    };
                    uniqueItems: {
                        type: string;
                        default: boolean;
                    };
                    contains: {
                        $ref: string;
                    };
                    maxProperties: {
                        $ref: string;
                    };
                    minProperties: {
                        $ref: string;
                    };
                    required: {
                        $ref: string;
                    };
                    additionalProperties: {
                        $ref: string;
                    };
                    definitions: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    properties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        default: {};
                    };
                    patternProperties: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                        propertyNames: {
                            format: string;
                        };
                        default: {};
                    };
                    dependencies: {
                        type: string;
                        additionalProperties: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                    propertyNames: {
                        $ref: string;
                    };
                    const: boolean;
                    enum: {
                        type: string;
                        items: boolean;
                        minItems: number;
                        uniqueItems: boolean;
                    };
                    type: {
                        anyOf: ({
                            $ref: string;
                            type?: undefined;
                            items?: undefined;
                            minItems?: undefined;
                            uniqueItems?: undefined;
                        } | {
                            type: string;
                            items: {
                                $ref: string;
                            };
                            minItems: number;
                            uniqueItems: boolean;
                            $ref?: undefined;
                        })[];
                    };
                    format: {
                        type: string;
                    };
                    contentMediaType: {
                        type: string;
                    };
                    contentEncoding: {
                        type: string;
                    };
                    if: {
                        $ref: string;
                    };
                    then: {
                        $ref: string;
                    };
                    else: {
                        $ref: string;
                    };
                    allOf: {
                        $ref: string;
                    };
                    anyOf: {
                        $ref: string;
                    };
                    oneOf: {
                        $ref: string;
                    };
                    not: {
                        $ref: string;
                    };
                };
                default: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/operation.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    traits: {
                        type: string;
                        items: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                items?: undefined;
                            } | {
                                type: string;
                                items: ({
                                    oneOf: {
                                        $ref: string;
                                    }[];
                                    type?: undefined;
                                    additionalItems?: undefined;
                                } | {
                                    type: string;
                                    additionalItems: boolean;
                                    oneOf?: undefined;
                                })[];
                                $ref?: undefined;
                            })[];
                        };
                    };
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    bindings: {
                        $ref: string;
                    };
                    message: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/operationTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    summary: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    operationId: {
                        type: string;
                    };
                    security: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/message.json": {
                $id: string;
                oneOf: ({
                    $ref: string;
                    oneOf?: undefined;
                } | {
                    oneOf: ({
                        type: string;
                        required: string[];
                        additionalProperties: boolean;
                        properties: {
                            oneOf: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            schemaFormat?: undefined;
                            contentType?: undefined;
                            headers?: undefined;
                            messageId?: undefined;
                            payload?: undefined;
                            correlationId?: undefined;
                            tags?: undefined;
                            summary?: undefined;
                            name?: undefined;
                            title?: undefined;
                            description?: undefined;
                            externalDocs?: undefined;
                            deprecated?: undefined;
                            examples?: undefined;
                            bindings?: undefined;
                            traits?: undefined;
                        };
                        patternProperties?: undefined;
                    } | {
                        type: string;
                        additionalProperties: boolean;
                        patternProperties: {
                            "^x-[\\w\\d\\.\\x2d_]+$": {
                                $ref: string;
                            };
                        };
                        properties: {
                            schemaFormat: {
                                type: string;
                            };
                            contentType: {
                                type: string;
                            };
                            headers: {
                                allOf: ({
                                    $ref: string;
                                    properties?: undefined;
                                } | {
                                    properties: {
                                        type: {
                                            const: string;
                                        };
                                    };
                                    $ref?: undefined;
                                })[];
                            };
                            messageId: {
                                type: string;
                            };
                            payload: {};
                            correlationId: {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                            tags: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                uniqueItems: boolean;
                            };
                            summary: {
                                type: string;
                                description: string;
                            };
                            name: {
                                type: string;
                                description: string;
                            };
                            title: {
                                type: string;
                                description: string;
                            };
                            description: {
                                type: string;
                                description: string;
                            };
                            externalDocs: {
                                $ref: string;
                            };
                            deprecated: {
                                type: string;
                                default: boolean;
                            };
                            examples: {
                                type: string;
                                items: {
                                    type: string;
                                    additionalProperties: boolean;
                                    anyOf: {
                                        required: string[];
                                    }[];
                                    properties: {
                                        name: {
                                            type: string;
                                            description: string;
                                        };
                                        summary: {
                                            type: string;
                                            description: string;
                                        };
                                        headers: {
                                            type: string;
                                        };
                                        payload: {};
                                    };
                                };
                            };
                            bindings: {
                                $ref: string;
                            };
                            traits: {
                                type: string;
                                items: {
                                    oneOf: ({
                                        $ref: string;
                                        type?: undefined;
                                        items?: undefined;
                                    } | {
                                        type: string;
                                        items: ({
                                            oneOf: {
                                                $ref: string;
                                            }[];
                                            type?: undefined;
                                            additionalItems?: undefined;
                                        } | {
                                            type: string;
                                            additionalItems: boolean;
                                            oneOf?: undefined;
                                        })[];
                                        $ref?: undefined;
                                    })[];
                                };
                            };
                            oneOf?: undefined;
                        };
                        required?: undefined;
                    })[];
                    $ref?: undefined;
                })[];
            };
            "http://asyncapi.com/definitions/2.5.0/correlationId.json": {
                $id: string;
                type: string;
                required: string[];
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    description: {
                        type: string;
                        description: string;
                    };
                    location: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/messageTrait.json": {
                $id: string;
                type: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemaFormat: {
                        type: string;
                    };
                    contentType: {
                        type: string;
                    };
                    headers: {
                        allOf: ({
                            $ref: string;
                            properties?: undefined;
                        } | {
                            properties: {
                                type: {
                                    const: string;
                                };
                            };
                            $ref?: undefined;
                        })[];
                    };
                    messageId: {
                        type: string;
                    };
                    correlationId: {
                        oneOf: {
                            $ref: string;
                        }[];
                    };
                    tags: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        uniqueItems: boolean;
                    };
                    summary: {
                        type: string;
                        description: string;
                    };
                    name: {
                        type: string;
                        description: string;
                    };
                    title: {
                        type: string;
                        description: string;
                    };
                    description: {
                        type: string;
                        description: string;
                    };
                    externalDocs: {
                        $ref: string;
                    };
                    deprecated: {
                        type: string;
                        default: boolean;
                    };
                    examples: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    bindings: {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/components.json": {
                $id: string;
                type: string;
                description: string;
                additionalProperties: boolean;
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                properties: {
                    schemas: {
                        $ref: string;
                    };
                    servers: {
                        $ref: string;
                    };
                    channels: {
                        $ref: string;
                    };
                    serverVariables: {
                        $ref: string;
                    };
                    messages: {
                        $ref: string;
                    };
                    securitySchemes: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    parameters: {
                        $ref: string;
                    };
                    correlationIds: {
                        type: string;
                        patternProperties: {
                            "^[\\w\\d\\.\\-_]+$": {
                                oneOf: {
                                    $ref: string;
                                }[];
                            };
                        };
                    };
                    operationTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageTraits: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    serverBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    channelBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    operationBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                    messageBindings: {
                        type: string;
                        additionalProperties: {
                            $ref: string;
                        };
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/schemas.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.5.0/messages.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
            "http://asyncapi.com/definitions/2.5.0/SecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.5.0/userPassword.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/apiKey.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/X509.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/symmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/asymmetricEncryption.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/HTTPSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.5.0/NonBearerHTTPSecurityScheme.json": {
                $id: string;
                not: {
                    type: string;
                    properties: {
                        scheme: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/BearerHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    scheme: {
                        type: string;
                        enum: string[];
                    };
                    bearerFormat: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/APIKeyHTTPSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                    };
                    in: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/oauth2Flows.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    flows: {
                        type: string;
                        properties: {
                            implicit: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            password: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            clientCredentials: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                    not?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                    not?: undefined;
                                } | {
                                    not: {
                                        required: string[];
                                    };
                                    $ref?: undefined;
                                    required?: undefined;
                                })[];
                            };
                            authorizationCode: {
                                allOf: ({
                                    $ref: string;
                                    required?: undefined;
                                } | {
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
            };
            "http://asyncapi.com/definitions/2.5.0/oauth2Flow.json": {
                $id: string;
                type: string;
                properties: {
                    authorizationUrl: {
                        type: string;
                        format: string;
                    };
                    tokenUrl: {
                        type: string;
                        format: string;
                    };
                    refreshUrl: {
                        type: string;
                        format: string;
                    };
                    scopes: {
                        $ref: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/oauth2Scopes.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    type: string;
                };
            };
            "http://asyncapi.com/definitions/2.5.0/openIdConnect.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    openIdConnectUrl: {
                        type: string;
                        format: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/SaslSecurityScheme.json": {
                $id: string;
                oneOf: {
                    $ref: string;
                }[];
            };
            "http://asyncapi.com/definitions/2.5.0/SaslPlainSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/SaslScramSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/SaslGssapiSecurityScheme.json": {
                $id: string;
                type: string;
                required: string[];
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                };
                patternProperties: {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            "http://asyncapi.com/definitions/2.5.0/parameters.json": {
                $id: string;
                type: string;
                additionalProperties: {
                    $ref: string;
                };
                description: string;
            };
        };
        description: string;
    };
};
export declare const latestVersion: string;
export declare function getCopyOfSchema(version: AsyncAPISpecVersion): Record<string, unknown>;
